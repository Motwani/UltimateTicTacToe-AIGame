len(A)
a=" A : [ 7551982, 8124939, 4023780, 7868369, 4412570, 2542961, 7380261, 1164290, 7781065, 1164599, 2563492, 5354415, 4994454, 2627136, 5933501, 668219, 1821804, 7818378, 33654, 4167689, 8652323, 5750640, 9822437, 3466466, 554089, 6168826, 335687, 2466661, 8511732, 6288553, 2905889, 7747975, 3744045, 1545003, 1008624, 8041203, 7176125, 4321092, 714053, 7200073, 166697, 7814651, 3090485, 8318668, 6600364, 3352620, 2430137, 7685821, 1442555, 828955, 6540266, 5305436, 116568, 1883410, 7975347, 9629015, 4735259, 6559041, 1832532, 5840170, 6983732, 5886179, 1496505, 7241412, 144558, 9462840, 8579314, 2488436, 9677478, 7589124, 5636642, 2440601, 1767332, 2399786, 6299635, 8534665, 1367339, 805592, 5572668, 6990026, 8465261, 4808596, 7641452, 8464860, 3170126, 7403200, 6932907, 3776122, 1313688, 3992189, 2382116, 3886952, 349816, 1596435, 7353742, 9964868, 9882224, 3818546, 3885458, 1200559, 3910256, 7949895, 463872, 6392805, 9513226, 3427933, 3470571, 6225817, 552452, 5567651, 6414423, 6701681, 4725847, 894529, 8046603, 426263, 5280891, 9197661, 9764507, 1740413, 9530261, 9163599, 7561587, 5848442, 7312422, 4794268, 5793465, 5039382, 5147388, 7346933, 4697363, 6436473, 5159752, 2207985, 8256403, 8958858, 6099618, 2172252, 3063342, 4324166, 3919237, 8985768, 2703255, 2386343, 3064166, 247762, 7271683, 1812487, 7163753, 4635382, 449426, 2561592, 3746615, 8741199, 6696192, 606265, 5374062, 3065308, 6918398, 2956279, 8949324, 2804580, 3421479, 7846658, 8895839, 8277589, 1262596, 451779, 9972218, 6378556, 4216958, 7127258, 8593578, 326883, 4737513, 6578257, 7582654, 8675499, 9038961, 7902676, 8874020, 5513073, 631930, 912719, 8394492, 1508363, 455175, 9215635, 6813970, 2021710, 5673212, 184474, 4511247, 4653238, 2218883, 9669544, 295018, 3694660, 1709444, 4019025, 5047809, 45740, 1035395, 8159408, 1557286, 1304144, 6496263, 2094202, 9945315, 1905585, 1143081, 6994125, 9609830, 1077628, 3488222, 6299366, 7187139, 3883908, 7077292, 3210807, 7328762, 7695314, 1138834, 7689433, 5083719, 202831, 8138452, 5495064, 7543763, 1597085, 5429837, 8455839, 6925605, 6600884, 3571512, 3422637, 8911245, 3700762, 2338168, 6830853, 2539094, 490627, 2294717, 497349, 8297867, 7299269, 4769134, 285033, 4335917, 9908413, 152868, 2658658, 3525848, 1884044, 4953877, 8660374, 8989154, 888731, 7217408, 2614940, 7990455, 9779818, 1441488, 9605891, 4518756, 3705442, 9331226, 404585, 9011202, 7355000, 7461968, 6512552, 2689841, 2873446, 256454, 1068037, 8786859, 2323599, 3332506, 2361155, 7476810, 5605915, 5950352, 6491737, 8696129, 4637800, 4207476, 9334774, 840248, 9159149, 5201180, 7211332, 3135016, 8524857, 4566111, 7697488, 1833291, 7227481, 8289951, 2389102, 9102789, 8585135, 1869227, 4082835, 8447466, 4985240, 4176179 ]"
a
a=[]
a= A : [ 7551982, 8124939, 4023780, 7868369, 4412570, 2542961, 7380261, 1164290, 7781065, 1164599, 2563492, 5354415, 4994454, 2627136, 5933501, 668219, 1821804, 7818378, 33654, 4167689, 8652323, 5750640, 9822437, 3466466, 554089, 6168826, 335687, 2466661, 8511732, 6288553, 2905889, 7747975, 3744045, 1545003, 1008624, 8041203, 7176125, 4321092, 714053, 7200073, 166697, 7814651, 3090485, 8318668, 6600364, 3352620, 2430137, 7685821, 1442555, 828955, 6540266, 5305436, 116568, 1883410, 7975347, 9629015, 4735259, 6559041, 1832532, 5840170, 6983732, 5886179, 1496505, 7241412, 144558, 9462840, 8579314, 2488436, 9677478, 7589124, 5636642, 2440601, 1767332, 2399786, 6299635, 8534665, 1367339, 805592, 5572668, 6990026, 8465261, 4808596, 7641452, 8464860, 3170126, 7403200, 6932907, 3776122, 1313688, 3992189, 2382116, 3886952, 349816, 1596435, 7353742, 9964868, 9882224, 3818546, 3885458, 1200559, 3910256, 7949895, 463872, 6392805, 9513226, 3427933, 3470571, 6225817, 552452, 5567651, 6414423, 6701681, 4725847, 894529, 8046603, 426263, 5280891, 9197661, 9764507, 1740413, 9530261, 9163599, 7561587, 5848442, 7312422, 4794268, 5793465, 5039382, 5147388, 7346933, 4697363, 6436473, 5159752, 2207985, 8256403, 8958858, 6099618, 2172252, 3063342, 4324166, 3919237, 8985768, 2703255, 2386343, 3064166, 247762, 7271683, 1812487, 7163753, 4635382, 449426, 2561592, 3746615, 8741199, 6696192, 606265, 5374062, 3065308, 6918398, 2956279, 8949324, 2804580, 3421479, 7846658, 8895839, 8277589, 1262596, 451779, 9972218, 6378556, 4216958, 7127258, 8593578, 326883, 4737513, 6578257, 7582654, 8675499, 9038961, 7902676, 8874020, 5513073, 631930, 912719, 8394492, 1508363, 455175, 9215635, 6813970, 2021710, 5673212, 184474, 4511247, 4653238, 2218883, 9669544, 295018, 3694660, 1709444, 4019025, 5047809, 45740, 1035395, 8159408, 1557286, 1304144, 6496263, 2094202, 9945315, 1905585, 1143081, 6994125, 9609830, 1077628, 3488222, 6299366, 7187139, 3883908, 7077292, 3210807, 7328762, 7695314, 1138834, 7689433, 5083719, 202831, 8138452, 5495064, 7543763, 1597085, 5429837, 8455839, 6925605, 6600884, 3571512, 3422637, 8911245, 3700762, 2338168, 6830853, 2539094, 490627, 2294717, 497349, 8297867, 7299269, 4769134, 285033, 4335917, 9908413, 152868, 2658658, 3525848, 1884044, 4953877, 8660374, 8989154, 888731, 7217408, 2614940, 7990455, 9779818, 1441488, 9605891, 4518756, 3705442, 9331226, 404585, 9011202, 7355000, 7461968, 6512552, 2689841, 2873446, 256454, 1068037, 8786859, 2323599, 3332506, 2361155, 7476810, 5605915, 5950352, 6491737, 8696129, 4637800, 4207476, 9334774, 840248, 9159149, 5201180, 7211332, 3135016, 8524857, 4566111, 7697488, 1833291, 7227481, 8289951, 2389102, 9102789, 8585135, 1869227, 4082835, 8447466, 4985240, 4176179 ]
a= [ 7551982, 8124939, 4023780, 7868369, 4412570, 2542961, 7380261, 1164290, 7781065, 1164599, 2563492, 5354415, 4994454, 2627136, 5933501, 668219, 1821804, 7818378, 33654, 4167689, 8652323, 5750640, 9822437, 3466466, 554089, 6168826, 335687, 2466661, 8511732, 6288553, 2905889, 7747975, 3744045, 1545003, 1008624, 8041203, 7176125, 4321092, 714053, 7200073, 166697, 7814651, 3090485, 8318668, 6600364, 3352620, 2430137, 7685821, 1442555, 828955, 6540266, 5305436, 116568, 1883410, 7975347, 9629015, 4735259, 6559041, 1832532, 5840170, 6983732, 5886179, 1496505, 7241412, 144558, 9462840, 8579314, 2488436, 9677478, 7589124, 5636642, 2440601, 1767332, 2399786, 6299635, 8534665, 1367339, 805592, 5572668, 6990026, 8465261, 4808596, 7641452, 8464860, 3170126, 7403200, 6932907, 3776122, 1313688, 3992189, 2382116, 3886952, 349816, 1596435, 7353742, 9964868, 9882224, 3818546, 3885458, 1200559, 3910256, 7949895, 463872, 6392805, 9513226, 3427933, 3470571, 6225817, 552452, 5567651, 6414423, 6701681, 4725847, 894529, 8046603, 426263, 5280891, 9197661, 9764507, 1740413, 9530261, 9163599, 7561587, 5848442, 7312422, 4794268, 5793465, 5039382, 5147388, 7346933, 4697363, 6436473, 5159752, 2207985, 8256403, 8958858, 6099618, 2172252, 3063342, 4324166, 3919237, 8985768, 2703255, 2386343, 3064166, 247762, 7271683, 1812487, 7163753, 4635382, 449426, 2561592, 3746615, 8741199, 6696192, 606265, 5374062, 3065308, 6918398, 2956279, 8949324, 2804580, 3421479, 7846658, 8895839, 8277589, 1262596, 451779, 9972218, 6378556, 4216958, 7127258, 8593578, 326883, 4737513, 6578257, 7582654, 8675499, 9038961, 7902676, 8874020, 5513073, 631930, 912719, 8394492, 1508363, 455175, 9215635, 6813970, 2021710, 5673212, 184474, 4511247, 4653238, 2218883, 9669544, 295018, 3694660, 1709444, 4019025, 5047809, 45740, 1035395, 8159408, 1557286, 1304144, 6496263, 2094202, 9945315, 1905585, 1143081, 6994125, 9609830, 1077628, 3488222, 6299366, 7187139, 3883908, 7077292, 3210807, 7328762, 7695314, 1138834, 7689433, 5083719, 202831, 8138452, 5495064, 7543763, 1597085, 5429837, 8455839, 6925605, 6600884, 3571512, 3422637, 8911245, 3700762, 2338168, 6830853, 2539094, 490627, 2294717, 497349, 8297867, 7299269, 4769134, 285033, 4335917, 9908413, 152868, 2658658, 3525848, 1884044, 4953877, 8660374, 8989154, 888731, 7217408, 2614940, 7990455, 9779818, 1441488, 9605891, 4518756, 3705442, 9331226, 404585, 9011202, 7355000, 7461968, 6512552, 2689841, 2873446, 256454, 1068037, 8786859, 2323599, 3332506, 2361155, 7476810, 5605915, 5950352, 6491737, 8696129, 4637800, 4207476, 9334774, 840248, 9159149, 5201180, 7211332, 3135016, 8524857, 4566111, 7697488, 1833291, 7227481, 8289951, 2389102, 9102789, 8585135, 1869227, 4082835, 8447466, 4985240, 4176179 ]
for i in range(0,len(a)):
    print a[i]
for i in range(0,len(a)):
    print a[i],
len(a)
147+36
183/20
(float)183/20
double a=20
a=20.0
b=183.0
b/a
1.0/5.0
191+216+147+32
586/64
586+4
590/64
586.0/64.0
590.0/64.0
147+36
183.0/20.0
import sys
import os
os.system('git grep -E 'ifndef\s*__'');
os.system('git grep -E "ifndef\s*__"');
a=os.system('git grep -E "ifndef\s*__"');
a
import subprocess
output = subprocess.check_output("git grep -E 'ifndef\s*__'");
output = subprocess.check_output('ls');
output
output = subprocess.check_output('git grep -E "ifndef\s*__"');
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output
output.split(':')
output
print output
output.split('\n')
output.split('\n').split(':')
output_list=output.split('\n')
output_list
for i in range(0,len(output_list)):
    output[i]=(str)output[i].split(':')[0]
for i in range(0,len(output_list)):
    output[i]=output[i].split(':')[0].tostring()
for i in range(0,len(output_list)):
    output[i]=output[i].split(':')[0]
for i in range(0,len(output_list)):
    output[i]=''.join(output[i].split(':')[0])
for i in range(0,len(output_list)):
    temp=''.join(output[i].split(':')[0])
    output[i]=temp
raj=[]
for i in range(0,len(output_list)):
    temp=''.join(output[i].split(':')[0])
    raj.append(temp)
raj
del(raj)
raj
for i in range(0,len(output_list)):
    temp=output[i].split(':')[0]
    print temp
for i in range(0,len(output_list)):
    print output[i]
for i in range(0,len(output_list)):
    print output_list[i]
raj=[]
for i in range(0,len(output_list)):
    temp=output_list[i].split(':')[0]
for i in range(0,len(output_list)):
    temp=output_list[i].split(':')[0]
    raj.append(temp)
raj
for i in range(0,len(raj)):
    print raj[i]
for i in range(0,len(raj)):
    os.system('cat'+raj[i])
for i in range(0,len(raj)):
    os.system('cat '+raj[i])
for i in range(0,len(raj)):
    os.system('cat '+raj[i] + ' | grep ifdef')
for i in range(0,len(raj)):
    os.system('cat '+raj[i] + ' | grep ifdef __')
for i in range(0,len(raj)):
    os.system('cat '+raj[i] + ' | grep "ifdef __"')
for i in range(0,len(raj)):
    os.system('cat '+raj[i] + ' | grep "ifdef __[!cplus]"')
for i in range(0,len(raj)):
    print raj[i]
    sleep(2)
import time
for i in range(0,len(raj)):
    print raj[i]
    time.sleep(2)
for i in range(0,len(raj)):
    print raj[i]
    time.sleep(2)
    os.system('cat '+raj[i])
    time.sleep(2)
for i in range(0,len(raj)):
    print raj[i]
    time.sleep(2)
    os.system('cat '+raj[i])
    time.sleep(20)
ls
raj
import re
re.finditer(raj[0],'/');
raj[0]
re.finditer('/',raj[0]);
type(raj[0])
[m.start() for m in re.finditer('/',raj[0])]
for m in re.finditer('/',raj[0])
for m in re.finditer('/',raj[0]):
    print m
for m in re.finditer('/',raj[0]):
    print *m
for m in re.finditer('/',raj[0]):
    print &m
san=[]
for m in re.finditer('/',raj[0]):
    san.append(m)
san
del(san)
import subprocess
subprocess.check_output('cat '+raj[0])
raj[0]
ls
subprocess.check_output('cat '+raj[0])
os.system('cat '+raj[0])
subprocess.check_output('cat '+raj[0],shell=True)
subprocess.check_output('cat '+raj[0]+' grep #ifdef',shell=True)
subprocess.check_output('cat '+raj[0]+' | grep #ifdef',shell=True)
raj[0]
subprocess.check_output('cat '+raj[0]+' | grep "#ifdef"',shell=True)
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i])
    [m.start() for m in re.finditer('#ifdef __',raj[i] )]
    for j in range(0,len(m)):
        if output[j+9]!='c' and output[j+10]!=p':
            output=list(output)
            output[j+6]=''
            output[j+7]=''
            output="".join(output)
            f=open("raj[i]",'w');
            f.write(output)
            f.close()
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i])
    [m.start() for m in re.finditer('#ifdef __',raj[i] )]
    for j in range(0,len(m)):
        if output[j+9]!='c' and output[j+10]!='p':
            output=list(output)
            output[j+6]=''
            output[j+7]=''
            output="".join(output)
            f=open("raj[i]",'w');
            f.write(output)
            f.close()
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i])
    [m.start() for m in re.finditer('#ifdef __',raj[i] )]
    for j in range(0,len(m)):
        if output[j+9]!='c' and output[j+10]!='p':
            print j
san="sdf"
san[1]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i])
    san = [m.start() for m in re.finditer('#ifdef __',raj[i] )]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            print j
san = [m.start() for m in re.finditer('#ifdef __',raj[0] )]
san
raj[0]
[m.start() for m in re.finditer('#ifdef __',raj[0] )]
[m.start() for m in re.finditer("#ifdef __",raj[0] )]
[m.start() for m in re.finditer("#ifdef",raj[0] )]
[m.start() for m in re.finditer("#ifdef",raj[0])]
san="output"
san=sn.list()
san
san=list(san)
san
[m.start() for m in re.finditer('t',san)]
san='output'
[m.start() for m in re.finditer('t',san)]
nis=raj
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i])
    san = [m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            print j
output=subprocess.check_output('cat '+raj[0])
raj[0]
os.system('cat '+raj[0])
ls
pwd
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
import os,subprocess,re
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output.split('\n').split(':')
output_list=output.split('\n')
for i in range(0,len(output_list)):
    temp=output_list[i].split(':')[0]
    raj.append(temp)
raj=[]
raj
for i in range(0,len(output_list)):
    temp=output_list[i].split(':')[0]
    raj.append(temp)
raj
ls
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i])
    l1=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(l1)):
        print j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i])
    l1=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(l1)):
        print l1[j]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i])
    l1=[m.start() for m in re.finditer('#ifdef __',output)]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i])
raj[0]
output=subprocess.check_output('cat '+raj[0])
raj[0]
os.system('cat '+raj[0])
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    l1=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(l1)):
        print l1[j]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    l1=[m.start() for m in re.finditer('#ifdef __',output)]
    print i
raj[139]
for i in range(0,len(raj)):
    print len(raj[i].split(' '))
raj[139]
raj[139].split(' ')
len(raj[139].split(' '))
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        raj.remove(i)
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        raj.remove(raj[i])
raj[139]
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        print i
raj.remove(raj[139])
raj[139]
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        print i
raj.remove(raj[142])
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        print i
raj.remove(raj[142])
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        print i
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if out[j+9]!='c' and out[j+10]!='p' :
            output_list=list(output)
            del output[j+6]
            del output[j+6]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p' :
            output_list=list(output)
            del output[j+6]
            del output[j+6]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p' :
            output_list=list(output)
            del output_list[j+6]
            del output_list[j+6]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i].shell=True)
    print i
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        print 'j',
        print j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    print i
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        print 'j',
        print j
len(raj)
raj[195]
raj[196]
raj.remove(raj[195])
len(raj)
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    print i
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        print 'j',
        print j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            output_list=list(output)
            del output_list[j+9]
            del output_list[j+9]
            output="".join(output_list)
            print output
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            output_list=list(output)
            del output_list[j+9]
            del output_list[j+9]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
import subprocess,re,os
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
    temp=output_list[i].split(':')[0]
    raj.append(temp)
raj=[]
for i in range(0,len(output_list)):
    temp=output_list[i].split(':')[0]
    raj.append(temp)
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        print i
raj.remove(raj[139],raj[140])
raj.remove(raj[139])
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        print i
raj.remove(raj[139])
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        print i
raj.remove(raj[142])
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        print i
raj.remove(raj[142])
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        print i
raj.remove(raj[142])
for i in range(0,len(raj)):
    if len(raj[i].split(' '))>1:
        print i
raj.remove(raj[142])
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            output_list=list(output)
            del output_list[j+9]
            del output_list[j+9]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
raj[len(raj)-1]
raj.delete(raj[len(raj)-1])
raj.remove(raj[len(raj)-1])
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            output_list=list(output)
            del output_list[j+9]
            del output_list[j+9]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
import time
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            output_list=list(output)
            del output_list[j+9]
            del output_list[j+9]
            output="".join(output_list)
            print output,
            time.sleep(20)
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        print san[j],output[san[j]]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        print output[j+9]!='c',output[j+10]!='p',
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        print output[j+9],output[j+10],
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        print output[j+9],output[j+10],output[j+11]
output=subprocess.check_output('cat '+raj[i],shell=True)
output=subprocess.check_output('cat '+raj[0],shell=True)
san=[m.start() for m in re.finditer('#ifdef __',output)]
san
output[506]
output[507]
output[515]
output[516]
output[517]
output[1462]
output=subprocess.check_output('cat '+raj[1],shell=True)
san=[m.start() for m in re.finditer('#ifdef __',output)]
san
output[691]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            output_list=list(output)
            del output_list[j+9]
            del output_list[j+9]
            output="".join(output_list)
            print i,san[j]
output=subprocess.check_output('cat '+raj[0],shell=True)
san=[m.start() for m in re.finditer('#ifdef __',output)]
san
san[506+9]
output[506+9]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            output_list=list(output)
            del output_list[j+9]
            del output_list[j+9]
            output="".join(output_list)
            print output[j+9],output[j+10]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            output_list=list(output)
            del output_list[j+9]
            del output_list[j+9]
            output="".join(output_list)
            print output[j+9],output[j+10],i,j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            output_list=list(output)
            del output_list[j+9]
            del output_list[j+9]
            output="".join(output_list)
            print output[j+9],output[j+10],i,san[j]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[j+9]!='c' and output[j+10]!='p':
            output_list=list(output)
            output="".join(output_list)
            print output[j+9],output[j+10],i,san[j]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[san[j]+9]!='c' and output[san[j]+10]!='p':
            output_list=list(output)
            del output_list[san[j+8]]
            del output_list[san[j+8]]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
ls
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        if output[san[j]+9]!='c' and output[san[j]+10]!='p':
            output_list=list(output)
            del output_list[san[j+8]]
            del output_list[san[j+8]]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
            print i,j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        print i,san[j]
output=subprocess.check_output('cat '+raj[189],shell=True)
san=[m.start() for m in re.finditer('#ifdef __',output)]
san[0]
output[613]
output=subprocess.check_output('cat '+raj[183],shell=True)
san
output[604+9]
output
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        print output[san[j]+9],output[san[j]+10]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifdef __',output)]
    for j in range(0,len(san)):
        print output[san[j]+9],output[san[j]+10]
        if i==183 :
            time.sleep(20)
raj.find('sys/include/ps.h')
for i in range(0,len(raj)):
    if raj[i][0]=='s' and raj[i][1]='y' :
        print i
for i in range(0,len(raj)):
    if raj[i][0]=='s' and raj[i][1]=='y' :
        print i
raj[142]
raj[143]
raj[144]
raj[145]
raj[146]
raj[147]
raj[148]
raj[149]
raj[150]
raj[151]
raj[152]
raj[153]
raj[154]
raj[155]
for i in range(142,195)
for i in range(142,195):
    print raj[i]
for i in range(142,195):
    print raj[i],i
raj[174]
output=subprocess.check_output('cat '+raj[174],shell=True)
san=[m.start() for m in re.finditer('#ifdef __',output)]
san
san[545+9]
output[545+9]
output[670+9]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifndef __',output)]
    for j in range(0,len(san)):
        if output[san[j]+9]!='c' and output[san[j]+10]!='p':
           print i,j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifndef __',output)]
    for j in range(0,len(san)):
        if output[san[j]+9]!='c' and output[san[j]+10]!='p':
           print i,san[j]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifndef __',output)]
    for j in range(0,len(san)):
        if output[san[j]+9]!='c' and output[san[j]+10]!='p':
            output_list=list(output)
            del output_list[san[j+8]]
            del output_list[san[j+8]]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
            print i,j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifndef __',output)]
    for j in range(0,len(san)):
        if output[san[j]+9]!='c' and output[san[j]+10]!='p':
            output_list=list(output)
            del output_list[san[j]+8]
            del output_list[san[j]+8]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
            print i,j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#define __',output)]
    for j in range(0,len(san)):
        if output[san[j]+9]!='c' and output[san[j]+10]!='p':
            output_list=list(output)
            del output_list[san[j]+8]
            del output_list[san[j]+8]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
            print i,j
import os,re,
import os,re
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
import subprocess
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
raj=[]
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
for i in range(0,len(raj)):
        if len(raj[i].split(' '))>1:
                print i
raj.remove(raj[139])
for i in range(0,len(raj)):
        if len(raj[i].split(' '))>1:
                print i
raj.remove(raj[139])
for i in range(0,len(raj)):
        if len(raj[i].split(' '))>1:
                print i
raj.remove(raj[142])
for i in range(0,len(raj)):
        if len(raj[i].split(' '))>1:
                print i
raj.remove(raj[142])
for i in range(0,len(raj)):
        if len(raj[i].split(' '))>1:
                print i
len(raj)
raj[196]
raj[195]
raj.remove(raj[195])
ls
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifndef __',output)]
    for j in range(0,len(san)):
        if output[san[j]+9]!='c' and output[san[j]+10]!='p':
            output_list=list(output)
            del output_list[san[j]+8]
            del output_list[san[j]+8]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
            print i,j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#define __',output)]
    for j in range(0,len(san)):
        if output[san[j]+9]!='c' and output[san[j]+10]!='p':
            output_list=list(output)
            del output_list[san[j]+8]
            del output_list[san[j]+8]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
            print i,j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#endif /* ',output)]
    for j in range(0,len(san)):
        if output[san[j]+12]!='c' and output[san[j]+13]!='p':
            output_list=list(output)
            del output_list[san[j]+12]
            del output_list[san[j]+12]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
            print i,j
raj[123]
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#endif /\* ',output)]
    for j in range(0,len(san)):
        if output[san[j]+12]!='c' and output[san[j]+13]!='p':
            output_list=list(output)
            del output_list[san[j]+12]
            del output_list[san[j]+12]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
            print i,j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#define __',output)]
    for j in range(0,len(san)):
        if output[san[j]+9]!='c' and output[san[j]+10]!='p':
            output_list=list(output)
            del output_list[san[j]+8]
            del output_list[san[j]+8]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
            print i,j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#ifndef __',output)]
    for j in range(0,len(san)):
        if output[san[j]+9]!='c' and output[san[j]+10]!='p':
            output_list=list(output)
            del output_list[san[j]+8]
            del output_list[san[j]+8]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
            print i,j
for i in range(0,len(raj)):
    output=subprocess.check_output('cat '+raj[i],shell=True)
    san=[m.start() for m in re.finditer('#endif /',output)]
    for j in range(0,len(san)):
        if output[san[j]+12]!='c' and output[san[j]+13]!='p':
            output_list=list(output)
            del output_list[san[j]+10]
            del output_list[san[j]+10]
            output="".join(output_list)
            f=open(raj[i],'w')
            f.write(output)
            print i,j
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
import subprocess,os
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output
import subprocess,os
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output
raj=[]
output_list=output.split('\n')
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
raj
len(raj)
ls
vim doc.txt
import os
os.system('vim doc.txt')
for i in range(0,len(raj)):
        if len(raj[i].split(' '))>1:
                print i
raj.delete(raj[139])
raj.remove(raj[139])
for i in range(0,len(raj)):
        if len(raj[i].split(' '))>1:
                print i
raj.remove(raj[142])
for i in range(0,len(raj)):
        if len(raj[i].split(' '))>1:
                print i
len(raj)
import os,subprocess
import re
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
raj=[]
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
raj
for i in range(0,len(raj)):
        if len(raj[i].split(' '))>1:
                print i
raj.delete(raj[139])
raj.remove(raj[139])
for i in range(0,len(raj)):
        if len(raj[i].split(' '))>1:
                print i
raj.remove(raj[142])
len(raj)
for i in range(0,len(raj)):
    os.system('vim '+raj[i])
import os,system,re
import os,re
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
import subprocess
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
raj=[]
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
len(raj)
for i in range(0,len(raj)):
        if len(raj[i].split(' '))>1:
                print i
for i in range(0,len(raj)):
    os.system()
for i in range(0,len(raj)):
    os.system('vim ' + raj[i])
import os,re,subprocess
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output
import os,sys,subprocess
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
raj=[]
import os,sys,subprocess
output_list=output.split('\n')
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
raj=[]
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
raj
for i in range(0,len(raj)):
    os.system('vim '+raj[i])
import os,sys,subprocess
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
raj=[]
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
raj
len(raj)
for i in range(0,4):
    os.system('vim '+raj[i])
import os,sys,subprocess
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
raj=[]
import os,sys,subprocess
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
raj=[]
output_list=output.split('\n')
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
raj
for i in range(0,21):
    os.system('vim ' + raj[i])
import os,sys,subprocess
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
output_list=output.split('\n')
range(0,21)
raj
raj=[]
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
raj
for i in range(0,21):
    os.system('vim ' + raj[i])
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
raj.clear()
delete(raj)
del raj[:]
raj
for i in range(0,len(output_list)):
        temp=output_list[i].split(':')[0]
        raj.append(temp)
raj
for i in range(0,len(raj)):
    if raj[i][0]=='c' : 
        os.system('vim' + raj[i])
    else :
        break
for i in range(0,len(raj)):
    if raj[i][0]=='c' : 
        os.system('vim ' + raj[i])
    else :
        break
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
raj
for i in range(0,35):
    raj.remove(raj[0])
raj
raj.remove(raj[0])
raj
range(0,12)
ls
raj
raj[0]
for i in range(0,len(raj)-1):
    if raj[i][0]=='s' and raj[i][1]=='a':
        os.system('vim ' + raj[i])
    else :
        continue
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
raj
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
raj
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
raj
for i in range(0,len(raj)):
    if raj[i][0]=='s' and raj[i][1]=='t' and raj[i][2]=='e':
        os.system('vim '+raj[i])
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
raj
for i in range(0,len(raj)):
    if raj[i][0]=='c' and raj[i][1]=='o':
        os.system('vim '+raj[i])
    else :
        break
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
rak
raj
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
raj
for i in range(0,30):
    raj.pop(0)
raj
for i in range(0,5):
    raj.pop(0)
raj
raj.pop(0)
raj
import os,subprocess
os.system('git status')
output=os.system('git status')
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
ls
raj
raj.remove('')
raj
gh (probably just adapting the peripheral configuration)
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
raj
for i in range(0,len(raj)-1):
    if raj[i]==raj[i+1]:
        raj.remove(raj[i])
raj
l
ls
raj
a="r"
raj.index(a)
for i in range(0,len(raj)):
    for j in range(i+1,len(raj)):
        if raj[i]==raj[j]:
            raj.remove(raj[j])
raj
for i in range(0,len(raj)):
    for j in range(i+1,len(raj)):
        if raj[i]==raj[j]:
            raj.remove(raj[j])
raj
san=[]
for i in range(0,len(raj)):
    if raj[i] in san:
        continue
    else san.append(raj[i])
for i in range(0,len(raj)):
    if raj[i] in san:
        continue
    else :
        san.append(raj[i])
san
raj=san
for i in range(0,len(raj)):
    os.system('vim '+ raj[i])
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
san=[]
for i in range(0,len(raj)):
        if raj[i] in san:
                continue
        else :
                san.append(raj[i])
raj=san
raj
for i in range(0,len(raj)):
    os.system('vim '+raj[i])
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
san=[]
for i in range(0,len(raj)):
        if raj[i] in san:
                continue
        else :
                san.append(raj[i])
raj=san
raj
import os,sys,subprocess
raj=[]
output = subprocess.check_output('git grep -E "ifndef\s*__"',shell=True);
output_list=output.split('\n')
for i in range(0,len(output_list)):
          temp=output_list[i].split(':')[0]
          raj.append(temp)
san=[]
for i in range(0,len(raj)):
        if raj[i] in san:
                continue
        else :
                san.append(raj[i])
raj=san
range(9)
list(1,2)
[1,2]
range(1)
a= []
a.append([1,2])
a
len(a)
a =[1,2]
tuple(a)
range(9)
ls
open(client.c,r)
open('client.c','r')
open('client.c','r') as f
f=open('client.c','r')
f
r = f.read(1024)
type(r)
size(r)
len(r)
r = f.read(1024)
len(r)
r
import socket
s = socket.socket()
s.bind('127.0.0.1','5000');
s.bind('127.0.0.1');
s.bind(127.0.0.1);
s
s.bind(('127.0.0.1',5000))
s.listen(5)
s.accept()
c,addr = s.accept()
while True:
    c,addr = s.accept()
    print "from " + addr + "measa" + c
c,addr = s.accept()
s.bind(('127.0.0.1',5000))
s = socket.socket()
s.bind(('127.0.0.1',5000))
c,addr = s.accept()
c , addr = s.accept()
s.accept()
import socket
s = socket.socket()
s.connect(('127.0.0.1,5000'))
s.connect(('127.0.0.1',5000))
s.send('asdfsdfa')
s.send('asdfsdfaasdfsdfasdf')
s.connect(('127.0.0.1',5000))
s.send('asdfsdfaasdfsdfasdf')
import socket
s = socket.scoket()
s = socket.socket()
s.connect(('127.0.1.1',5000))
s.connect(('127.0.1.1',5005))
s.send('hello')
import socket
s = socket.socket()
s.bind(('127.0.1.1',5005))
s.listen(10)
while True:
    c,addr = s.accept()
    print c
while True:
    c,addr = s.accept()
    temp = c.receive
    print temp, addr
import socket
s = socket.socket()
s.bind(('127.0.1.1',5005))
s.listen(10)
while True:
    c,addr = s.accept()
    temp = c.receive
    print temp, addr
while True:
    c,addr = s.accept()
    temp = c.receive()
    print temp, addr
import socket
s.listen(10)
s = socket.socket()
s.connect(('127.0.1.1',5005))
s.send('asdfsdfa')
import socket
s = socket.socket()
s.bind(('127.0.1.1',5005))
s.listen(10)
while True:
    c,addr = s.accept()
    temp = c.receive()
    print temp, addr
import socket
s = socket.socket()
s.connect(('127.0.1.1',5005))
import socket
s = socket.socket()
s.bind(('127.0.1.1',5005))
while True:
    c,addr = s.accept()
    temp = c.recv()
    print temp, addr
while True:
    c,addr = s.accept()
    temp = c.recv(1024)
    print temp, addr
import socket
s = socket.socket()
s.bind(('127.0.0.1',5005))
s.listen(14)
while True:
    c,addr = s.accept()
    temp = c.recv(1024)
    print temp + "from " + addr
while True:
    c,addr = s.accept()
    temp = c.recv(1024)
    print str(temp) + "from " + str(addr)
import socket
s = socket.socket()
s.connect(('127.0.0.1',5005));
s.send('asf')
import socket
s = socket.socket()
s.bind(('127.0.0.1',5005))
s.listen(10)
while True:
    c,addr = s.accept()
    temp = c.recv(1024)
    print str(temp) + "from " + str(addr)
import socket
s= socket.socket()
s.connect(('127.0.0.1'),5005)
s.connect(('127.0.0.1',5005))
s.send('asdfsdfa')
s.send('raju kno')
f = open("/home/raj/Dropbox/Video/Train - Hey, Soul Sister.mp4",'r');
f
f[0]
import socket
s = socket.socket()
s.bind(('127.0.0.1',5000))
t = socket.socket()
t.bind(('127.0.0.1',5000))
try :
    t.bind(('127.0.0.1',5000))
except :
    some erroe occured
try :
    t.bind(('127.0.0.1',5000))
except :
    print "some erroe occured"
t.bind(('127.0.0.1',5000))
try :
    t.bind(('127.0.0.1',5000))
except ValueError:
    print "some erroe occured"
import socket
addr = '127.0.0.1'
socket.inet_addr(addr)
socket.inet_aton(addr)
addr = '127.0.0.1.1'
socket.inet_aton(addr)
addr = '1.1.1.1'
socket.inet_aton(addr)
try :
    socket.inet_aton(addr)
except:
    print "error"
import multiprocessing
import os
s = "asdf"
os.path.isdir(s)
s = "/home/raj/Downloads"
os.path.isdir(s)
s = "~/Downloads"
os.path.isdir(s)
a = "asdfkj lkj l jl  lk lk j l  "
a.split(' ')
os.path.isdir(s)
s = "/home/raj/Downloads"
os.path.isdir(s)
os.system('ls '+ s)
a = str(os.system('ls '+ s))
a
import subprocess
output = subprocess.Popen(["ls", "-a"], stdout=subprocess.PIPE).communicate()[0]
print output
import subprocess
output = str(subprocess.Popen(["ls" +  "-l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls " +  "-l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls " , "-l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls" , "-l"], stdout=subprocess.PIPE).communicate()[0])
output
output = str(subprocess.Popen(["ls" , " ~ -l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls" , "~" + -l"], stdout=subprocess.PIPE).communicate()[0])
ls ~
output = str(subprocess.Popen(["ls ~" ,  + -l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls ~" ,  " -l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls " ,  "~ -l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls " ,  "/home/raj -l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls " ,  "/home/raj" + "-l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls" ,  "/home/raj" + "-l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls" ,  "/home/raj" + " -l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls" +  "/home/raj" , " -l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls " +  "/home/raj" , " -l"], stdout=subprocess.PIPE).communicate()[0])
output = str(subprocess.Popen(["ls " , " /home/raj " + " -l "], stdout=subprocess.PIPE).communicate()[0])
output = subprocess.Popen(["ls", "-l"], stdout=subprocess.PIPE).communicate()[0]
output
output = subprocess.Popen(["ls .", "-l"], stdout=subprocess.PIPE).communicate()[0]
output = subprocess.Popen(["ls", " -l " + "."], stdout=subprocess.PIPE).communicate()[0]
output = subprocess.Popen(["ls", " . " ], stdout=subprocess.PIPE).communicate()[0]
output = subprocess.Popen(["ls", "/home/raj" ], stdout=subprocess.PIPE).communicate()[0]
output = subprocess.Popen(["ls", "/home/raj" + "-l" ], stdout=subprocess.PIPE).communicate()[0]
output = subprocess.Popen(["ls", "/home/raj" + " -l" ], stdout=subprocess.PIPE).communicate()[0]
output = subprocess.Popen(["ls /home/raj -l", "" ], stdout=subprocess.PIPE).communicate()[0]
output = subprocess.Popen(["ls /home/raj", "" ], stdout=subprocess.PIPE).communicate()[0]
import commands
print commands.getstatusoutput('ls /home/raj -l')
output =  commands.getstatusoutput('ls /home/raj -l')
import subprocess
    p = subprocess.Popen(exe, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    p = subprocess.Popen(' ls /home/raj -l', stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
output =  subprocess.Popen(' ls ' + '/gome/raj', stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
output =  subprocess.Popen(' ls ' + '/home/raj', stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
import os
os.listdir('/home/raj')
output = os.listdir('/home/raj')
for i in range (output):
    info = os.stat(output[i])
for i in range(output):
    info = os.stat(output[i])
info = os.stat(output[0])
output = os.listdir('/home/raj')
output
info = os.stat('/home/raj' + output[0])
info = os.stat('/home/raj/' + output[0])
info.st_size
info.st_atime
info.n_fields
info.st_ctime
share_dir = '/home/raj/'
os.listdir(share_dir)
file_list = os.listdir(share_dir)
os.stat('/home/raj/sema.h')
info = os.stat('/home/raj/sema.h')
info.st_mtimt
info.st_mtime
import time
time.ctime(info.st_mtime)
t1 = time.ctime(info.st_mtime)
t1
info = os.stat('/home/raj/utlist.h')
t2 = time.ctime(info.st_mtime)
t1
t2
t1>t2
1a=[]
a=[]
a.info.st_size
info.st_size
'IndexGet shortlist'
a='IndexGet shortlist'
a_list=a.split(' ')
a
a_list[0]
raj = raw.input().split()
raj = raw_input().split()
raj
import os
print hashlib.md5(open(full_path, 'rb').read()).hexdigest()
import hashlib
print hashlib.md5(open(full_path, 'rb').read()).hexdigest()
print hashlib.md5(open('/home/raj/xtimer.h', 'rb').read()).hexdigest()
print hashlib.md5(open(full_path, 'rb').read()).hexdigest()
import hashlib
print hashlib.md5(open('/home/raj/Dropbox/Video/Zehnaseeb Lyric - Hasee Toh Phasee - Parineeti Chopra, Sidharth.mp4', 'rb').read()).hexdigest()
import readline
readline.insert_text("asdfasdfa")
readline.read_history_file()
readline.read_history_file('~/.hisyory')
readline.read_history_file('~/.history')
readline.read_history_file('/home/raj/.history')
readline.insert_text("raju")
readline.read_init_file("~/.history")
import os
os.system('touch ~/.history')
readline.read_init_file("~/.history")
readline.insert_text("raju")
readline.read_history_file('~/.history')
readline.write_history_file('/home/raj/history')
readline.read_history_file()
a = readline.read_history_file()
a
readline.add_history()
readline.add_history("raju")
a = readline.read_history_file()
a
readline.insert_text('asdf')
readline.get_line_buffer()
import os
os.path.getsize('/home/raj/test.c')
f = open('/home/raj/test.c',r)
f = open('/home/raj/test.c','r')
f
f = open('/home/raj/random.c','w')
f.write("asdf ")
f.write("asdf12234213 ")
f.close()
import time
time.ctime (os.path.getmtime('/home/raj/vtimer.h'))
import os
time.ctime (os.path.getmtime('/home/raj/vtimer.h'))
time.ctime (os.path.getctime('/home/raj/vtimer.h'))
time.mtime(Wed Jan 13 19:17:44 2016)
time.mtime('Wed Jan 13 19:17:44 2016')
time.mktime('Wed Jan 13 19:17:44 2016')
time.mktime(Wed Jan 13 19:17:44 2016)
time.mktime(datetime.datetime.strptime(s, "%d/%m/%Y").timetuple())
import datetime
Wed Jan 13 19:17:44 2016
timestamp = time.mktime(time.strptime('>>> timestamp = time.mktime(time.strptime(datetimestring, '%a, %d %b %Y %H:%M:%S GMT'))', '%a, %d %b %Y %H:%M:%S GMT'))
timestamp = time.mktime(time.strptime(Wed Jan 13 19:17:44 2016, '%a %b %d %H:%M:%S %Y'))
timestamp = time.mktime(time.strptime('Wed Jan 13 19:17:44 2016', '%a %b %d %H:%M:%S %Y'))
timestamp
a= ['sds', 'asd','asasdad']
a[0]+a[1]+a[2]
str(a[0]+a[1]+a[2])
import os
info = os.stat('/home/raj/xtimer.h')
info.st_mtime
import re
pattern = re.compile('*')
pattern = re.compile("*")
pattern = re.compile("^*")
pattern = re.compile("[a-z]*")
import re
pattern = re.compile("[a-b]*")
pattern.match("cab")
pattern = re.compile("^[a-b]*")
pattern.match("cab")
pattern = re.compile("^[a\-b]*")
pattern.match("cab")
pattern.match("222")
pattern = re.compile("^[a\-b]")
pattern.match("222")
import magic
mime = magic.Magic(mime=true)
mime = magic.Magic(mime=True)
import magic
mime = magic.Magic(mime=True)
mime = magic.Magic()
mime = magic.Magic(1)
mime.from_file('/home/raj/xtimer.h')
mime.file('/home/raj/xtimer.h')
m = magic.open(magic.MAGIC_MIME)
m.load()
m.file("/home/raj/xtimer.h")
import os
os.path.isdir('/home/raj/')
os.path.isdir('/home/raj')
os.path.isdir('/home/ra')
import socket
s = socket.socket
s = socket.socket()
import sys
sys.exit()
range(8)
import math
math.inf
math.isinf
math.isinf()
test = float("inf")
test
int(test)
float(inf)
float(test)
test>5
test<2
test = -1*float("inf")
test
max(2,3)
3%2
a= [[2,3],[1,2]]
a[0]
a
def func_temp(a):
    a[0] = "lksadf"
func_temp(a)
a
b=a
b
def func_temp(a):
    a[0] = "lksadfghfhfhj"
func_temp(b)
a
b
a = [1,2]
def func(a):
    b = a
    b[0]='fds'
func(a)
a
a =[1,2]
def func(a)
def func(a):
    b= a[:]
    b[0]='dfsfs'
func(a)
a
import random
random.rand()
random.randint()
random.randint(1,2)
random.randint(1,100)
range(0,9,3)
2==2==3
2==2==2
1==1==-1
1==1==1==1
a= [ [0, 1, 2 ],[ 3, 4, 5 ], [ 6, 7, 8 ],[ 0, 3, 6 ],[ 1, 4, 7 ],[ 2, 5, 8 ],[ 0, 4, 8 ],[ 2, 4, 6 ] ]
a[0]
a[1]
a[2]
len(A)
len(a)
a = [[1,2],[3,4]]
a
a[0]
range(9)
range(0,9,3)
import signal
signal.signal(signal.SIGALRM,handler)
def handler():
    print "sdf"
signal.signal(signal.SIGALRM,handler)
signal.alarm(4)
def handler(signum,frame):
    print "sdf"
signal.alarm(4)
signal.signal(signal.SIGALRM,handler)
signal.alarm(4)
a = [a,2]
a=[1,2]
a='sdf'
def func(a):
    a=a+'f'
    print a
func(a)
a
reange(0,9,3)
range(0,9,3)
f =eopn('/home/raj/test.c','a')
f =open('/home/raj/test.c','a')
f.write('sdfsdfdsf')
import os
f.close()
os.system('cat ~/test.c')
f =open('/home/raj/test.c','w+')
f.write('sdfsdfdsf')
f.close()
os.system('cat ~/test.c')
import readline
for i in range(readline.get_current_history_length()):
        print readline.get_history_item(i + 1)
import atexit
import os
import readline
import rlcompleter
historyPath = os.path.expanduser("~/.pyhistory")
def save_history(historyPath=historyPath):
        import readline
        readline.write_history_file(historyPath)
if os.path.exists(historyPath):
        readline.read_history_file(historyPath)
atexit.register(save_history)
save_history('sdfdsf')
